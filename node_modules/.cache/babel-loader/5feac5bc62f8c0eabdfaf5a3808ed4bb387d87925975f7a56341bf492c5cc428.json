{"ast":null,"code":"var _jsxFileName = \"/Users/ios/Desktop/business-directory-frontend-final/src/pages/MessagingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagingPage = () => {\n  _s();\n  const currentUserId = \"user123\";\n  const [receiverId] = useState(\"Business Support\");\n  const [messages, setMessages] = useState([{\n    senderId: receiverId,\n    content: \"Hello! How can we help you today?\"\n  }]);\n  const [text, setText] = useState(\"\");\n  const sendMessage = () => {\n    if (!text.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      senderId: currentUserId,\n      content: text\n    }]);\n    setText(\"\");\n\n    // Auto-reply after 1 second\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        senderId: receiverId,\n        content: \"Thanks for your message! Our team will get back to you soon.\"\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-2xl mx-auto bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"\\uD83D\\uDCE9 Chat with: \", receiverId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 overflow-y-auto border p-4 mb-4 bg-gray-100 rounded\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 text-sm ${msg.senderId === currentUserId ? 'text-right' : 'text-left'}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `inline-block px-3 py-1 rounded ${msg.senderId === currentUserId ? 'bg-blue-500 text-white' : 'bg-gray-300'}`,\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 p-2 border rounded\",\n        placeholder: \"Type a message...\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagingPage, \"6tVaDhShIyTS/vPu7NBjLE9Cu/8=\");\n_c = MessagingPage;\nexport default MessagingPage;\nvar _c;\n$RefreshReg$(_c, \"MessagingPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MessagingPage","_s","currentUserId","receiverId","messages","setMessages","senderId","content","text","setText","sendMessage","trim","prev","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ios/Desktop/business-directory-frontend-final/src/pages/MessagingPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MessagingPage = () => {\n  const currentUserId = \"user123\";\n  const [receiverId] = useState(\"Business Support\");\n  const [messages, setMessages] = useState([\n    { senderId: receiverId, content: \"Hello! How can we help you today?\" }\n  ]);\n  const [text, setText] = useState(\"\");\n\n  const sendMessage = () => {\n    if (!text.trim()) return;\n    \n    // Add user message\n    setMessages(prev => [...prev, { \n      senderId: currentUserId, \n      content: text \n    }]);\n    \n    setText(\"\");\n    \n    // Auto-reply after 1 second\n    setTimeout(() => {\n      setMessages(prev => [...prev, { \n        senderId: receiverId, \n        content: \"Thanks for your message! Our team will get back to you soon.\" \n      }]);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"p-6 max-w-2xl mx-auto bg-white rounded shadow\">\n      <h2 className=\"text-2xl font-bold mb-4\">ðŸ“© Chat with: {receiverId}</h2>\n\n      <div className=\"h-64 overflow-y-auto border p-4 mb-4 bg-gray-100 rounded\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`mb-2 text-sm ${msg.senderId === currentUserId ? 'text-right' : 'text-left'}`}>\n            <span className={`inline-block px-3 py-1 rounded ${msg.senderId === currentUserId ? 'bg-blue-500 text-white' : 'bg-gray-300'}`}>\n              {msg.content}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex gap-2\">\n        <input\n          type=\"text\"\n          className=\"flex-1 p-2 border rounded\"\n          placeholder=\"Type a message...\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button onClick={sendMessage} className=\"bg-blue-600 text-white px-4 py-2 rounded\">Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessagingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}